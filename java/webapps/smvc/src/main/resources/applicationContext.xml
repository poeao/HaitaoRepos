<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">
	 <context:property-placeholder ignore-unresolvable="true" local-override="true"
                                  location="classpath*:/application.properties"/>

    <util:properties id="APP_PROPERTIES" location="classpath:application.properties" local-override="true"/>
    
    
 	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.me.smvc">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- Define the datasource bean by using application.properties file -->
	<bean id="dataSource" destroy-method="close" class="com.jolbox.bonecp.BoneCPDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	    <property name="idleConnectionTestPeriod" value="${BoneCP.idleConnectionTestPeriod}" />
        <property name="idleMaxAge" value="${BoneCP.idleMaxAge}" />
        <property name="maxConnectionsPerPartition" value="${BoneCP.maxConnectionsPerPartition}" />
        <property name="minConnectionsPerPartition" value="${BoneCP.minConnectionsPerPartition}" />
        <property name="partitionCount" value="${BoneCP.partitionCount}" />
        <property name="acquireIncrement" value="${BoneCP.acquireIncrement}" />
        <property name="statementsCacheSize" value="${BoneCP.statementsCacheSize}" />
        <property name="releaseHelperThreads" value="${BoneCP.releaseHelperThreads}" />
	</bean>
    
    <!-- JPA实体管理器工厂 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
       <property name="dataSource" ref="dataSource"/>
       <property name="persistenceProvider" ref="persistenceProvider"/>
       <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>  
  	    <property name="jpaDialect" ref="jpaDialect"/>  
       <property name="jpaProperties">
        <props>
         <prop key="hibernate.dialect">${hibernate.dialect}</prop>
         <prop key="hibernate.max_fetch_depth">3</prop>
         <prop key="hibernate.jdbc.fetch_size">18</prop>
         <prop key="hibernate.jdbc.batch_size">10</prop>
         <prop key="hibernate.hbm2ddl.auto">update</prop>
         <prop key="hibernate.show_sql">true</prop>
         <prop key="hibernate.format_sql">true</prop>
         <prop key="javax.persistence.validation.mode">none</prop>
         <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
         <prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache-hibernate-local.xml</prop>
         <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
        </props>
       </property>
    </bean>
    <!-- 用于指定持久化实现厂商类 -->
    <bean id="persistenceProvider" class="org.hibernate.ejb.HibernatePersistence"/>
    <!-- 用于设置JPA实现厂商的特定属性 -->
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>  
    <!-- 用于指定一些高级特性 -->
    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>  
    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    
    <!-- 用于执行原生的SQL  -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- Spring Data Jpa配置 -->
    <jpa:repositories  base-package="com.me.smvc" transaction-manager-ref="transactionManager"
         entity-manager-factory-ref="entityManagerFactory"/>
    	
	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
	<bean class="com.me.smvc.spring.util.SpringContextHolder" lazy-init="false" />


</beans>