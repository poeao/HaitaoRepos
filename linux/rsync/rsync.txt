1. rsync 工作方式 
   1) 主机本地间的数据传输
   2) 通过远程通道 shell (rcp,ssh) 
   3) 通过守护进程 daemon (socket) 的方式 

1.1 local-only mode
    rsync [option] SRC  [DEST]

   1)  rsync command
   2) [option]  参数选项 
   3) SRC 为源, 既待拷的分区,文件或者目录等 
   4) [DEST] 为目的分区 文件或者目录等 

1.2 remote shell mode
    pull: rsync [option] [user@]host:src.. [DEST]
    push: rsync [option] src [user@]host:dest
    
  1) rsync is the command
  2) [option]  参数选项 
  3) [USER@]HOST 为rsync 同步的选程的连接用户和主机地址 
  4) SRC 为源, 既待拷的分区,文件或者目录 和HOST之间用一个冒号连接
  5) DEST 为目的分区,文件或者目录等;

  pull example:
  rsync -vzrtopgP -e ' ssh -p 22' anhry@192.168.1.188:/opt /tmp
  
  push example: 
  rsync -vzrtopP -e ' ssh -p 22' /etc/ anhry@192.168.1.22:/tmp

  1) -vzrtopg  相当于 -avz , 表示同步时文件和目录属性不变
  2) --progress 显示同步的过程  可以用 -P 替换 
  3) -e ' ssh -p 22' 表示通过ssh 的通道传输数据 -p 22 可省略 

1.3 rsync daemon mode
pull : 1) rsync [option] [user@]host::src...  [dest]
        2) rsync [option] rsync://[user@]HOST[:PORT]/SRC...  [DEST]
push:1) rsync [option] src... [user@]host::dest
        2) rsync [option] src... rsync://[user@]HOST[:PORT]/DEST

第一种语法中,用又冒号连接SRC/DEST,  这个SRC/DEST也不是路径, 而是守护进程中配置的模块名称.

pull example: 
   rsync -avzrtopgP rsync://rsync_backup@192.168.1.188:/anhry/  /test/ --password-file=/etc/rsync.password
push example:
   rsync -avzrtopgP /test/ rsync://rsync_backup@192.168.1.188:/anhry/ --password-file=/etc/rsync.password

实践: 
  1. rsync [option] src... [DEST]
  常用参数: 
  -v  --verbose 详细输出,传输时的进度等信息
  -z --compress 压缩   
  -a --archive  归档模式  以递归方式传输文件 
  -t  --time 保持时间信息 
  -o --owner  保持文件属主信息
  -p --perms 保持文件权限 
  -g --group 保持文件属组信息 
  -P --progress 显示同步过程及传输时的进度等信息 
  -D --devices 保持设备文件信息 
  -e --rsh=COMMAND 使用的通道协议  指定替代RSH的shell 程序
  --exclude=PATTERN 指定排除不需要传输的文件模式 

rsync -avz /opt/  /tmp   vs  rsync -avz /opt /tmp 有斜线和无斜线  一个不包括目录 一个包括目录   

daemon mode:

vi /etc/rsyncd.conf 

1============server==============
#rsync_config--------------------------start
#created by Leo 2015-03-03
#qq 46179140 
##rsyncd.conf start##
uid = rsync
gid = rsync
use chroot = no
max connections = 200
timeout = 300
pid file = /var/run/rsyncd.pid
lock file = /var/run/rsyncd.lock
log file = /var/log/rsyncd.log

[anhry]
path = /anhry/
ignore errors
read only = false
hosts allow = 0.0.0.0/32
hosts deny = 0.0.0.0/32
auth users = rsync_backup
secrets file = /etc/rsync.password
#rsync_config--------------------------end
-----------------------------------------------------------------------
useradd rsync -s /sbin/nologin -M
echo "rsync_backup:anhry" >> /etc/rsync.password
chmod 600 /etc/rsync.password   #  the pribilege must be 600
-----------------------------------------------------------------------
ps: rsync_backup 为同步传输用到的虚拟帐号, 仅为rsync的帐号 不需要是系统帐号, 密码不超过8位.
配置用于rsync 同步的帐号, 密码及帐号文件权限  

#start rsync 
rsync --daemon
netstat -tunpl|grep :873 
lsof -i tcp:873 

#auto start
echo "/usr/bin/rsync --daemon" >> /etc/rc.local
echo "/usr/bin/rsync --daemon
   
2==================client===================
echo "anhry" >> /etc/rsync.password #using this password to connect server
chmod 600 /etc/rsync.password

rsync -avzp html.tar.gz rsync_backup@server_ip::direcoty --password-file=/etc/rsync.password
rsync -avzp html.tar.gz rsync://rsync_backup@server_ip/direcoty --password-file=/etc/rsync.password


=========================================================

example 1:  
cd /var/www  &&\
tar -zcf /backup/10.0.0.17/html_$(date +%F).tar.gz ./html &&\
cd /backup/ &&\
rsync -az . rsync_backup@10.0.0.19::backup --passord-file=/etc/rsync.password >&/dev/null
find /backup -type -f -name "*.gz" -mtime +30|xargs rm -f
############################
add to crontab
00 00 * * * /bin/sh /server/scripts/bak.sh >&/dev/null

 exclude :
rsync -zvz --exclude=a --exclude=b/2 . rsync_backup@10.0.0.19::backup --password-file=/etc/rsync.passowrd

--exclude=PATTERN    exclude files matching PATTERN
--exclude-from=FILE   read exclude patterns from FILE
也可以在服务端对exclude的文件进行配置 但是只应用于下载.
   